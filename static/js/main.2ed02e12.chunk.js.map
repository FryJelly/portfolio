{"version":3,"sources":["img/faceportrait.png","components/navbar/Navitem.js","components/navbar/Navbar.js","components/Social.js","contents/Home.js","contents/About.js","components/Widecard.js","contents/Education.js","contents/Skills.js","contents/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","id","this","props","item","to","tolink","onClick","activec","bind","Component","Navbar","toggleSidebar","event","console","log","setState","closed","state","activeitem","x","NavItemActive","length","document","getElementById","classList","remove","add","navOpen","className","Social","class","href","target","rel","Home","src","profilepic","alt","text","speed","eraseDelay","About","title","Widecard","where","from","Education","Skills","myskills","map","value","mylanguages","Contact","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ed02e12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/faceportrait.4b35a25d.png\";","import React, { Component } from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\n\nclass Navitem extends Component {\n    render() {\n                return (\n                    <li id={this.props.item}>\n                    <Link to={this.props.tolink} onClick={this.props.activec.bind(this,this.props.item)}>{this.props.item}</Link>\n                    </li>\n                    )\n            }\n        }\n        \n        export default Navitem\n        ","import React, { Component } from 'react';\nimport Navitem from './Navitem';\n\nclass Navbar extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            closed: true,\n            'NavItemActive':''\n        }\n    }\n    toggleSidebar = (event) => {\n        console.log(\"clicked\")\n        this.setState({ closed: !this.state.closed });\n      }\n\n    activeitem=(x)=>\n    {\n        if(this.state.NavItemActive.length>0){\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\n        }\n        this.setState({'NavItemActive':x},()=>{\n            document.getElementById(this.state.NavItemActive).classList.add('active');\n        });\n    };\n    render() {\n\n        let navOpen = this.state.closed ? 'open' : 'closed';\n\n        return (\n            <div className='navigation'>\n                <div id='icon' className='icon'\n                    onClick={this.toggleSidebar} >\n                    |||\n                </div>\n                <div id='left' className={navOpen} >\n                <ul>\n                    <Navitem item=\"Home\" tolink=\"/\"  activec={this.activeitem}></Navitem>\n                    <Navitem item=\"About\" tolink=\"/about\"  activec={this.activeitem}></Navitem>\n                    <Navitem item=\"Education\" tolink=\"/education\"  activec={this.activeitem}></Navitem>\n                    <Navitem item=\"Skills\" tolink=\"/skills\"  activec={this.activeitem}></Navitem>\n                    <Navitem item=\"Contact\" tolink=\"/contact\"  activec={this.activeitem}></Navitem>\n                </ul>\n                </div>\n            </div>\n            )\n        }\n    }\n    \n    export default Navbar\n    ","import React, { Component } from 'react';\n\nclass Social extends Component {\n    render() {\n        return (\n            <div class=\"social\">\n                <a href=\"https://Linkedin.com/in/jerryblafield\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin-in\"></i></a>\n                <a href=\"https://github.com/fryjelly\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github\"></i></a>\n                <a href=\"https://Instagram.com/fryjellyy\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-instagram\"></i></a>\n                <a href=\"https://www.facebook.com/jerry.blafield\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-facebook-f\"></i></a>\n            </div>\n            )\n        }\n    }\n    \nexport default Social\n    ","import React, { Component } from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport profilepic from '../img/faceportrait.png';\nimport Social from '../components/Social'\n\n\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"condiv home\">\n                    <img src={profilepic} className=\"profilepic\" alt=\"faceportrait.jpg\"></img>\n                    <ReactTypingEffect className=\"typingeffect\" text={['I am Jerry Blåfield', 'Welcome', 'Find out more using the menu and links']} speed={50} eraseDelay={700}/>\n                    <Social />\n            </div>\n            )\n        }\n    }\n    \n    export default Home\n    ","import React, { Component } from 'react';\n\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"condiv\">\n            <h1 className=\"subtopic\">About Me</h1>\n            <h1>I'm Jerry Blåfield</h1>\n            <h3>Third year university student / Aspiring software developer</h3>\n            <br></br>\n            <p>My name is Jerry Blåfield. I am 24-years-old and I study at <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.jamk.fi/fi/Etusivu/\"><span title=\"JAMK - Etusivu\">JAMK University of Applied Sciences</span>\n                </a>. I study to get an engineering degree in Information and Communication Technologies. My studies focus on back end development, which hasn't stopped me from having and interest in full stack development.</p>\n                <p>Even though I prefer working with groups in my workflife I still fiddle around with personal single dev projects on my free time. My passion interests lie around making games and web applications.</p>\n                <p>Challenging myself and getting out of my comfort zone really push me to better myself, which is why I'm always looking for that next challenge.</p>\n            \n            </div>\n            )\n        }\n    }\n    \nexport default About\n    ","import React, { Component } from 'react'\n\nclass Widecard extends Component {\n    render() {\n        return (\n            <div class=\"widecard\">\n            <div class=\"compdet\">\n            <h3>{this.props.title}</h3>\n            <h4 class=\"secondtext\">{this.props.where}</h4>\n            <h4 class=\"secondtext\">{this.props.from} - {this.props.to}</h4>\n            </div>\n            </div>\n            )\n        }\n    }\n    \nexport default Widecard\n    ","import React, { Component } from 'react';\nimport Widecard from '../components/Widecard';\n\nclass Education extends Component {\n    render() {\n        return (\n            <div className=\"condiv\">\n            <h1 className=\"subtopic\">My Education</h1>\n            <Widecard title=\"Bachelor's degree in Information and Communication technologies\" where=\"JAMK University of Applied Sciences\" from=\"August 2017\" to=\"Present\"/>\n            <Widecard title=\"Exchange studies in Japan\" where=\"JAMK University of Applied Sciences\" from=\"August 2019\" to=\"December 2019\"/>\n            <Widecard title=\"Dual qualification high school graduate | Vocational Degree Electrician\" where=\"Järvenpää High School | KEUDA Vocational School\" from=\"2012\" to=\"2015\"/>\n            </div>\n            )\n        }\n    }\n    \nexport default Education\n    ","import React, { Component } from 'react'\n\nclass Skills extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            'myskills':['C#', 'HTML','CSS','JS','PHP','REACT JS','MySQL'],\n            'mylanguages':['English','Finnish','Swedish','Japanese']\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"condiv skills\">\n            <h1 className=\"subtopic\">My Skills</h1>\n            <h2>Programming</h2>\n            <ul>\n            {this.state.myskills.map((value)=>{\n                return <li>{value}</li>\n            })}\n            </ul>\n            <h2>Languages</h2>\n            <ul>\n            {this.state.mylanguages.map((value)=>{\n                return <li>{value}</li>\n            })}\n            </ul>\n            </div>\n            )\n        }\n    }\n    \n    export default Skills\n    ","import React, { Component } from 'react';\nimport Social from '../components/Social';\nclass Contact extends Component {\n    render() {\n        return (\n            <div className=\"condiv\">\n                <div className=\"content\">\n                    <h1 className=\"subtopic\">Contact Me</h1>\n                    <h3>Jerry Blåfield</h3>\n                    <h3>Email  :   jerry.blafield@gmail.com</h3>\n                    <h3>Phone : +358 440 78 9394</h3>\n                    <Social />\n                </div>\n            </div>\n            )\n        }\n    }\n    \n    export default Contact\n    ","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\nimport Navbar from './components/navbar/Navbar.js';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Education from './contents/Education';\nimport Skills from './contents/Skills';\nimport Contact from './contents/Contact';\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <div className=\"App\">\n    <Navbar />\n    <Route exact path=\"/\">\n    <Home />\n    </Route>\n    <Route path=\"/about\">\n    <About />\n    </Route>\n    <Route path=\"/education\">\n    <Education />\n    </Route>\n    <Route path=\"/skills\">\n    <Skills />\n    </Route>\n    <Route path=\"/contact\">\n    <Contact />\n    </Route>\n    </div>\n    </Router>\n   \n    );\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}